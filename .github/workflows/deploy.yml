# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch

env:
  AZURE_SP_CLIENT_ID: ${{ secrets.AZURE_SP_CLIENT_ID }}
  AZURE_SP_CLIENT_SECRET: ${{ secrets.AZURE_SP_CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_ACCESS_KEY }}
  TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
  TF_VAR_azure_subscription_id: 
  TF_VAR_azure_sp_client_id: ${{ secrets.AZURE_SP_CLIENT_ID }}
  TF_VAR_azure_sp_client_secret: ${{ secrets.AZURE_SP_CLIENT_SECRET }}
  INSTALL_BUNDLE: registry.tanzu.vmware.com/tanzu-cluster-essentials/cluster-essentials-bundle@sha256:e00f33b92d418f49b1af79f42cb13d6765f1c8c731f4528dfff8343af042dc3e
  INSTALL_REGISTRY_HOSTNAME: registry.tanzu.vmware.com
  INSTALL_REGISTRY_USERNAME: ${{ secrets.INSTALL_REGISTRY_USERNAME }}
  INSTALL_REGISTRY_PASSWORD: ${{ secrets.INSTALL_REGISTRY_PASSWORD }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: 'Install tool: pivnet cli'
        run: |
          wget -nv -O pivnet https://github.com/pivotal-cf/pivnet-cli/releases/download/v3.0.1/pivnet-linux-amd64-3.0.1
          chmod +x pivnet
          sudo mv pivnet /usr/local/bin
          pivnet version
      
      - name: Azure login
        run: |
          account=$(az login --service-principal -u $AZURE_SP_CLIENT_ID -p $AZURE_SP_CLIENT_SECRET --tenant $AZURE_TENANT_ID)
          echo $account
          export TF_VAR_azure_subscription_id=$(echo $account | jq -r .[].id)

      - name: 'Install tool: tanzu cli'
        run: |
          PIVNET_API_TOKEN=$(az keyvault secret show -n pivnet-api-token --vault-name kv-tanzu | jq -r .value)
          pivnet login --api-token $PIVNET_API_TOKEN
          pivnet download-product-files --product-slug='tanzu-application-platform' --release-version='1.3.0' --product-file-id=1310085
          mkdir $HOME/tanzu
          tar -xvf tanzu-framework-linux-amd64.tar -C $HOME/tanzu
          export TANZU_CLI_NO_INIT=true
          cd $HOME/tanzu
          export VERSION=v0.25.0
          sudo install cli/core/$VERSION/tanzu-core-linux_amd64 /usr/local/bin/tanzu
          tanzu version
          tanzu plugin install --local cli all
          tanzu plugin list --local cli all

      - name: 'Install tool: cluster essentials'
        run: |
          pivnet download-product-files --product-slug='tanzu-cluster-essentials' --release-version='1.3.0' --product-file-id=1330470
          mkdir $HOME/tanzu-cluster-essentials
          tar -xvf tanzu-cluster-essentials-linux-amd64-1.3.0.tgz -C $HOME/tanzu-cluster-essentials
      
      - name: Get terraform output
        run: |
          cd terraform
          terraform init
          echo "RESOURCE_GROUP=$(terraform output --raw resource_group_name)" >> $GITHUB_ENV
          echo "VIEW_CLUSTER_NAME=$(terraform output --raw view_cluster_name)" >> $GITHUB_ENV
        
      - name: Install cluster essentials on 'view' cluster
        run: |
          [[ -z "$RESOURCE_GROUP" ]] && echo 'RESOURCE_GROUP must be set.' && exit 1
          [[ -z "$VIEW_CLUSTER_NAME" ]] && echo 'VIEW_CLUSTER_NAME must be set.' && exit 1
          az aks get-credentials -g $RESOURCE_GROUP -n $VIEW_CLUSTER_NAME --admin
          cd $HOME/tanzu-cluster-essentials
          ./install.sh --yes

